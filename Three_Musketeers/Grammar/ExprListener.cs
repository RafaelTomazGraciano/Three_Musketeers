//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from Expr.g4 by ANTLR 4.13.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="ExprParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.1")]
[System.CLSCompliant(false)]
public interface IExprListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExprParser.start"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStart([NotNull] ExprParser.StartContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExprParser.start"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStart([NotNull] ExprParser.StartContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExprParser.prog"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterProg([NotNull] ExprParser.ProgContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExprParser.prog"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitProg([NotNull] ExprParser.ProgContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExprParser.stm"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStm([NotNull] ExprParser.StmContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExprParser.stm"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStm([NotNull] ExprParser.StmContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExprParser.function"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunction([NotNull] ExprParser.FunctionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExprParser.function"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunction([NotNull] ExprParser.FunctionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExprParser.func_body"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunc_body([NotNull] ExprParser.Func_bodyContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExprParser.func_body"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunc_body([NotNull] ExprParser.Func_bodyContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExprParser.att"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAtt([NotNull] ExprParser.AttContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExprParser.att"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAtt([NotNull] ExprParser.AttContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExprParser.new_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNew_type([NotNull] ExprParser.New_typeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExprParser.new_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNew_type([NotNull] ExprParser.New_typeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExprParser.args"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArgs([NotNull] ExprParser.ArgsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExprParser.args"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArgs([NotNull] ExprParser.ArgsContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>MulDiv</c>
	/// labeled alternative in <see cref="ExprParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMulDiv([NotNull] ExprParser.MulDivContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>MulDiv</c>
	/// labeled alternative in <see cref="ExprParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMulDiv([NotNull] ExprParser.MulDivContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>AddSub</c>
	/// labeled alternative in <see cref="ExprParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAddSub([NotNull] ExprParser.AddSubContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>AddSub</c>
	/// labeled alternative in <see cref="ExprParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAddSub([NotNull] ExprParser.AddSubContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>Parens</c>
	/// labeled alternative in <see cref="ExprParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParens([NotNull] ExprParser.ParensContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>Parens</c>
	/// labeled alternative in <see cref="ExprParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParens([NotNull] ExprParser.ParensContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>Var</c>
	/// labeled alternative in <see cref="ExprParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVar([NotNull] ExprParser.VarContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>Var</c>
	/// labeled alternative in <see cref="ExprParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVar([NotNull] ExprParser.VarContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>IntLiteral</c>
	/// labeled alternative in <see cref="ExprParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIntLiteral([NotNull] ExprParser.IntLiteralContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>IntLiteral</c>
	/// labeled alternative in <see cref="ExprParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIntLiteral([NotNull] ExprParser.IntLiteralContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>DoubleLiteral</c>
	/// labeled alternative in <see cref="ExprParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDoubleLiteral([NotNull] ExprParser.DoubleLiteralContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>DoubleLiteral</c>
	/// labeled alternative in <see cref="ExprParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDoubleLiteral([NotNull] ExprParser.DoubleLiteralContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExprParser.type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterType([NotNull] ExprParser.TypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExprParser.type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitType([NotNull] ExprParser.TypeContext context);
}
